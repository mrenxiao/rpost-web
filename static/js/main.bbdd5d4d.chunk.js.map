{"version":3,"sources":["components/Navbar.jsx","components/Footer.jsx","components/Jumbotron.jsx","components/Player.jsx","pages/Home.jsx","pages/About.jsx","pages/PrivacyPolicy.jsx","resources/PrivacyPolicyContent.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Navbar","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","Date","getFullYear","Jumbotron","this","props","title","subtitle","Player","ReactPlayer_default","url","playing","loop","width","height","Home","src_components_Navbar","src_components_Jumbotron","components_Player","src_components_Footer","About","PrivacyPolicy","react_markdown_default","source","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bbdd5d4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css'\n\nclass Navbar extends Component {\n  render() {\n    return (\n      // <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n      <nav className=\"navbar navbar-expand-md navbar-light\">\n\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">RPOST</Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">HOME<span className=\"sr-only\">(current)</span></Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/privacy-policy\">PRIVACY POLICY</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">ABOUT</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <span className=\"text-muted\">RPOST &#169; {new Date().getFullYear()}</span>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer","import React, { Component } from 'react';\nimport './Jumbotron.css';\n\nclass Jumbotron extends Component {\n  render() {\n    return (\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-3\">{this.props.title}</h1>\n          <p className=\"lead\">{this.props.subtitle}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbotron;","import React, { Component } from 'react';\n\nimport ReactPlayer from 'react-player'\n\nclass Player extends Component {\n  render() {\n    return (\n      <ReactPlayer \n      className=\"container\" \n      url='http://repostapp.com/vid/repost-iphone.mp4' \n      playing\n      loop\n      width=\"360px\"\n      height=\"640px\" />\n    );\n  }\n}\n\nexport default Player","import React, { Component } from 'react'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\nimport Jumbotron from '../components/Jumbotron'\nimport Player from '../components/Player'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <Jumbotron title=\"Hi\" subtitle=\"Welcome to the most modern Repost app page\"/>\n                <Player />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport Jumbotron from '../components/Jumbotron';\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <Jumbotron title=\"About\" subtitle=\"\"/>\n                <div className=\"container\">\n                Instagram users are all around the world nowadays.\n                Most of them share their own daily pictures or videos, whereas the rest repost content from other people's accounts.\n                You can find a bunch of Repost apps on App store / Google Play, but they are neither user friendly nor able to offer the best user experience.\n                That's why we have created RPOST, the most simple, elegant and modern repost app ever.\n                \n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport Jumbotron from '../components/Jumbotron';\nimport ReactMarkdown from 'react-markdown';\nimport content from '../resources/PrivacyPolicyContent.jsx';\n\nclass PrivacyPolicy extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <Jumbotron title=\"Privacy Policy\" subtitle=\"\">\n\n                </Jumbotron>\n                <div className=\"container\">\n                    <ReactMarkdown\n                        source={content}\n                    />\n                </div>              \n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default PrivacyPolicy;","const content = `\n\n> *Last update 20 December 2018*\n\nThis page is used to inform visitors regarding my policies with the collection, use, and disclosure of Personal Information if anyone decided to use my Service.\n\nIf you choose to use my Service, then you agree to the collection and use of information in relation to this policy. The Personal Information that I collect is used for providing and improving the Service. I will not use or share your information with anyone except as described in this Privacy Policy.\n\nThe terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which is accessible at Rpost unless otherwise defined in this Privacy Policy.\n\n**Information Collection and Use**\n\nFor a better experience, while using our Service, I may require you to provide us with certain personally identifiable information. The information that I request will be retained on your device and is not collected by me in any way.\n\nThe app does use third party services that may collect information used to identify you.\n\n\n**Log Data**\n\nI want to inform you that whenever you use my Service, in a case of an error in the app I collect data and information (through third party products) on your phone called Log Data. This Log Data may include information such as your device Internet Protocol (“IP”) address, device name, operating system version, the configuration of the app when utilizing my Service, the time and date of your use of the Service, and other statistics.\n\n**Cookies**\n\nCookies are files with a small amount of data that are commonly used as anonymous unique identifiers. These are sent to your browser from the websites that you visit and are stored on your device's internal memory.\n\nThis Service does not use these “cookies” explicitly. However, the app may use third party code and libraries that use “cookies” to collect information and improve their services. You have the option to either accept or refuse these cookies and know when a cookie is being sent to your device. If you choose to refuse our cookies, you may not be able to use some portions of this Service.\n\n**Service Providers**\n\nI may employ third-party companies and individuals due to the following reasons:\n\n*   To facilitate our Service;\n*   To provide the Service on our behalf;\n*   To perform Service-related services; or\n*   To assist us in analyzing how our Service is used.\n\nI want to inform users of this Service that these third parties have access to your Personal Information. The reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to disclose or use the information for any other purpose.\n\n**Security**\n\nI value your trust in providing us your Personal Information, thus I am striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and I cannot guarantee its absolute security.\n\n**Links to Other Sites**\n\nThis Service may contain links to other sites. If you click on a third-party link, you will be directed to that site. Note that these external sites are not operated by me. Therefore, I strongly advise you to review the Privacy Policy of these websites. I have no control over and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services.\n\n**Children’s Privacy**\n\nThese Services do not address anyone under the age of 13\\. I do not knowingly collect personally identifiable information from children under 13\\. In the case I discover that a child under 13 has provided me with personal information, I immediately delete this from our servers. If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact me so that I will be able to do necessary actions.\n\n**Changes to This Privacy Policy**\n\nI may update our Privacy Policy from time to time. Thus, you are advised to review this page periodically for any changes. I will notify you of any changes by posting the new Privacy Policy on this page. These changes are effective immediately after they are posted on this page.\n\n**Contact Us**\n\nIf you have any questions or suggestions about my Privacy Policy, do not hesitate to contact me.\n\nThis privacy policy page was created at [privacypolicytemplate.net](https://privacypolicytemplate.net) and modified / generated by [App Privacy Policy Generator](https://app-privacy-policy-generator.firebaseapp.com/)\n\n`\n\nexport default content;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Home from './pages/Home.jsx';\nimport About from './pages/About.jsx';\nimport PrivacyPolicy from './pages/PrivacyPolicy.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/rpost-web\" component={Home} />\n          <Route exact path=\"/rpost-web/about\" component={About} />\n          <Route exact path=\"/rpost-web/privacy-policy\" component={PrivacyPolicy} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}